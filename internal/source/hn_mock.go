// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/abatilo/feed/internal/source (interfaces: HNClient)

// Package source is a generated GoMock package.
package source

import (
	gomock "github.com/golang/mock/gomock"
	hnclient "github.com/munrocape/hn/hnclient"
	reflect "reflect"
)

// MockHNClient is a mock of HNClient interface
type MockHNClient struct {
	ctrl     *gomock.Controller
	recorder *MockHNClientMockRecorder
}

// MockHNClientMockRecorder is the mock recorder for MockHNClient
type MockHNClientMockRecorder struct {
	mock *MockHNClient
}

// NewMockHNClient creates a new mock instance
func NewMockHNClient(ctrl *gomock.Controller) *MockHNClient {
	mock := &MockHNClient{ctrl: ctrl}
	mock.recorder = &MockHNClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHNClient) EXPECT() *MockHNClientMockRecorder {
	return m.recorder
}

// GetItem mocks base method
func (m *MockHNClient) GetItem(arg0 int) (hnclient.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItem", arg0)
	ret0, _ := ret[0].(hnclient.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItem indicates an expected call of GetItem
func (mr *MockHNClientMockRecorder) GetItem(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItem", reflect.TypeOf((*MockHNClient)(nil).GetItem), arg0)
}

// GetTopStories mocks base method
func (m *MockHNClient) GetTopStories(arg0 int) ([]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopStories", arg0)
	ret0, _ := ret[0].([]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopStories indicates an expected call of GetTopStories
func (mr *MockHNClientMockRecorder) GetTopStories(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopStories", reflect.TypeOf((*MockHNClient)(nil).GetTopStories), arg0)
}
